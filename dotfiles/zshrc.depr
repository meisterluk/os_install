#!/bin/zsh
###########################################################
# Filename:      .zshrc.rendy
# Purpose:       config file for rendy system
# Authors:       meisterluk
# Bug-Reports:   see http://lukas-prokop.at/
# License:       This file is licensed under the GPL v2.
# Latest change: Mit Jan 28 15:49:21 CEST 2010 [meisterluk]
###########################################################

# VARIABLES {{{
RENDY_DATA='/media/data'
IP_GRML='88.198.6.110'
IP_LPAT='88.198.184.148'
IP_ROUTER='192.168.123.2'
USB_PATH='/media'
USB_STICKS=('Binade' 'Neposeus' 'Tengoo' 'Tunubu')
USB_DEFAULT_POINT='/dev/sdb1'
# }}}

# FUNCTIONS {{{
# TODO: compatible? secure? reliable?
usb_mounted () {
    # TODO: don't know how to handle boolean values in zsh
    if [ -d $USB_PATH'/'$1 ] && ! ls $USB_PATH'/'$1'/*' &>/dev/null; then
        return 0;
    else
        return 1;
    fi;
}
xkcd() {
    local f;
    f=$(curl -s http://xkcd.com/);
    display $(
        echo "$f" | grep -Po '(?<=")http://imgs.xkcd.com/comics/[^"]+(png|jpg)');
        echo "$f" | awk '/<img src="http:\/\/imgs\.xkcd\.com\/comics\/.*?" title=.*/{gsub(/^.*title=.|".*?$/,"");print}';
}
which_usb_mounted () {
    for i in ${(Oa)USB_STICKS}; do
        # TODO: $(usb_mounted $i) seems to be no condition. 
        # zsh understanding problem
        #if [ usb_mounted $i ]; then;
            # TODO: return strings does not seem to work!
            #return "$USB_PATH"'/'"$i";
        #fi;
    done;
    # TODO: workaround to problems above
    return 0;
}
pydoc-server () {
    if [[ $# > 1 ]]; then
        PORT=$1;
    else
        PORT=3000;
    fi;
    echo $# $PORT;
    #pydoc -p 8888 & gnome-open http://localhost:8888
}
git-read-commits () {
    git log --reverse --pretty=oneline | cut -c41- | nl | sort -nr;
}
listen-port () {
    sudo nc -l -p 80;
}
curve_lissajous () {
    ruby -rcurses -e "include Curses;i=0;loop{setpos 12*(Math.sin(i)+1),40*(Math.cos(i*0.2)+1);addstr'.';i+=0.01;refresh}"
}
curve_sinus () {
    ruby -e "i=0;loop{puts ' '*(29*(Math.sin(i)/2+1))+'|'*(29*(Math.cos(i)/2+1)); i+=0.1}"
}
jsonlint () {
    source=$(cat $1);
    curl -s -X POST http://www.jsonlint.com/ajax/validate -d json="$source" -d reformat=no
}
google_define() {
    local y="$@";
    curl -sA"Firefox" "http://www.google.com/search?q=define:${y// /+}" |Â·
        grep -Eo '<li>[^<]+' | sed 's/<li>//g' | nl |
        perl -MHTML::Entities -pe 'decode_entities($_)' 2>/dev/null;
}
random_fun_fact () {
    wget randomfunfacts.com -O - 2>/dev/null | grep \<strong\> | sed "s;^.*<i>\(.*\)</i>.*$;\1;" | while read FUNFACT; do notify-send -t $((1000+300*`echo -n $FUNFACT | wc -w`)) -i gtk-dialog-info "RandomFunFact" "$FUNFACT"; done
}
say()
{
    mplayer -user-agent Mozilla "http://translate.google.com/translate_tts?tl=en&q=$(echo $* | sed 's#\ #\+#g')" > /dev/null 2>&1 ;
}
geoip()
{
    curl -s "http://www.geody.com/geoip.php?ip=${1}" | sed '/^IP:/!d;s/<[^>][^>]*>//g' ;
}
duplicates()
{
    OUTF=rem-duplicates.sh;
    echo "#! /bin/sh" > $OUTF;
    find "$@" -type f -exec md5sum {} \; |
        sort --key=1,32 | uniq -w 32 -d --all-repeated=separate |
        sed -r 's/^[0-9a-f]*( )*//;s/([^a-zA-Z0-9./_-])/\\\1/g;s/(.+)/#rm \1/' >> $OUTF;
    chmod a+x $OUTF; ls -l $OUTF
    echo $OUTF" file written."
}
colortable () {
for STYLE in 0 1 2 3 4 5 6 7; do
  for FG in 30 31 32 33 34 35 36 37; do
    for BG in 40 41 42 43 44 45 46 47; do
      CTRL="\033[${STYLE};${FG};${BG}m"
      echo -en "${CTRL}"
      echo -n "${STYLE};${FG};${BG}"
      echo -en "\033[0m"
    done
    echo
  done
  echo
done
# Reset
echo -e "\033[0m"
}
# a very basic calculator
? () { echo "$*" | bc -l; }
function timestamp() { date -ud "1970-01-01 + $1 seconds"; }
# make move command less accessible. this sucks so often. use cp and rm instead.
# damn you, sh.
#mv () {
#    echo -n "Really? ";
#    read a;
#    if [[ $a:l == "y" ]]; then
#        mv $* | return;
#    else
#        echo "Okay.";
#        return 1;
#    fi;
#}
# }}}

# HASHES {{{
hash -d rendy=$RENDY_DATA'/'
hash -d data=$RENDY_DATA'/meta'
hash -d proj=$RENDY_DATA'/proj'
hash -d admintools=$RENDY_DATA'/proj/admintools'
hash -d myblogimg=$RENDY_DATA'/proj/MyBlog/images'
hash -d usb=$(which_usb_mounted)
hash -d chatlog='~/.purple/logs/icq/141414576'
# TODO: improve this! documentation is not always in $projSprachen
hash -d doc=$RENDY_DATA'/computer_stuff/progSprachen'
# TODO: add hashes for most important data/-files
hash -d money=$RENDY_DATA'/data/money.txt'
hash -d photos=$RENDY_DATA'/archiv/photos/'
hash -d desktop='/home/meisterluk/Desktop'
# }}}

# ALIASES {{{
# filesystem specific
 alias cdx='mount '$USB_DEFAULT_POINT' && cd '$(which_usb_mounted)'; ls -la'
 alias rmcurrentdir="A=$PWD; cd ..; rm -rI $A";
 alias shift_rk=$EDITOR' '$RENDY_DATA'/data/shift_rk'
 alias shift_nbik=$EDITOR' '$RENDY_DATA'/data/shift_nbik'
 alias castccc=$EDITOR' '$RENDY_DATA'/backups/audio/podcasts/ccc/podcast'
 alias casttellerrand=$EDITOR' '$RENDY_DATA'/backups/audio/podcasts/blick_ueber_den_tellerrand/podcast'
 alias castubuntublog=$EDITOR' '$RENDY_DATA'/backups/audio/podcasts/ubuntublogch/podcast'
 alias castpofacs=$EDITOR' '$RENDY_DATA'/backups/audio/podcasts/pofacs/podcast'
 alias castperl=$EDITOR' '$RENDY_DATA'/backups/audio/podcasts/perl/podcast'
 alias uni='cd /media/Binade/uni/1st_sem; ls -l;'
# browser, internet
 alias render_data='firefox "file:///'$RENDY_DATA'/data/render/index.html'
 alias ff='firefox "file://"$PWD"/" &'
 alias op='opera "file://"$PWD"/" &'
# network stuff
 alias uninternet='sudo ifdown ath0=home'
 alias renet="sudo ifdown wlan0; sudo ifup wlan0" # rebuild internet
# useful stuff
 alias utf8conv='for i in $(ls); do iconv -f iso-8859-15 -t utf-8 $i > $i".utf"; done;'
 alias latexc='for i in *.tex; do pdflatex $i; pdflatex $i; done; clear; ls'
 alias py='ipython'
 alias py3k='python3'
 alias mzscheme='rlwrap mzscheme' # provide bash completion for scheme
 alias con='mysql -h localhost -u root -p';
 alias access_rendy_data="if [ ! -d /media/Daten/Luki/data/ ]; then 
    sudo mount /media/Daten; fi; cd /media/Daten/Luki/" # if /etc/fstab sucks and does not work
 alias a="mv testit TESTIT"
 alias webshare='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"'
# spelling
 alias pzthon='python' # damn german keyboards :D
 alias kedit='gedit' # GNOME vs KDE
# fun
 alias nerd='echo "Hi! My name is nerd. 
And I am working in a computer factory. 
One day my boss said: Nerd? Are you busy? 
I said: No. 
Then klick this mouse with your right hand"'
 alias thx='echo please...'
 alias grml='echo "You are not running grml *grml*"'
 alias whothefuckis='whois'
# }}}

# VARIABLES, ENV {{{
export FPATH=$FPATH':/usr/share/zsh/functions/Lookup'
export PATH=$PATH':'$(echo ~proj)
export VIMINIT=':source ~/.vimrc'
export PYTHONPATH=$HOME':'$(echo ~proj)
# }}}

# ZSH SETTINGS {{{
setopt noautopushd
# }}}

# EOF
# vim: foldmethod=marker autoindent nosmartindent expandtab shiftwidth=4
